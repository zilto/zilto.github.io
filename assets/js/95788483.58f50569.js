"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7929],{7549:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>s,contentTitle:()=>r,default:()=>m,frontMatter:()=>n,metadata:()=>l,toc:()=>h});var i=a(5893),o=a(1151);const n={slug:"airflow-hamilton",title:"Simplify Airflow DAG Creation and Maintenance with Hamilton",authors:"tj",tags:["Hamilton","Airflow","orchestration"]},r=void 0,l={permalink:"/personal_website/blog/airflow-hamilton",source:"@site/blog/2023-06-28-airflow-hamilton/index.md",title:"Simplify Airflow DAG Creation and Maintenance with Hamilton",description:"This post walks you through the benefits of having Hamilton and Airflow directed acyclic graphs (DAGs) work in tandem. Airflow is responsible for orchestration (think macro) and Hamilton helps author clean and maintainable data transformations (think micro). The reason you can run Hamilton with Airflow, is that Hamilton is just a library with a small dependency footprint, so one can get started with Hamilton in no time! For those that are unfamiliar with Hamilton, we point you to an interactive overview on tryhamilton.dev. Otherwise we will talk about Hamilton at a high level and point to reference documentation for more details.",date:"2023-06-28T00:00:00.000Z",formattedDate:"June 28, 2023",tags:[{label:"Hamilton",permalink:"/personal_website/blog/tags/hamilton"},{label:"Airflow",permalink:"/personal_website/blog/tags/airflow"},{label:"orchestration",permalink:"/personal_website/blog/tags/orchestration"}],readingTime:9.365,hasTruncateMarker:!0,authors:[{name:"Thierry Jean",url:"https://github.com/zilto",imageURL:"https://github.com/zilto.png",key:"tj"}],frontMatter:{slug:"airflow-hamilton",title:"Simplify Airflow DAG Creation and Maintenance with Hamilton",authors:"tj",tags:["Hamilton","Airflow","orchestration"]},unlisted:!1,prevItem:{title:"Building a maintainable and modular LLM application stack with Hamilton",permalink:"/personal_website/blog/modular-llm"},nextItem:{title:"The perks of creating dataflows with Hamilton",permalink:"/personal_website/blog/perks-of-hamilton"}},s={authorsImageUrls:[void 0]},h=[];function c(t){const e={a:"a",blockquote:"blockquote",img:"img",p:"p",...(0,o.a)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(e.p,{children:["This post walks you through the benefits of having ",(0,i.jsx)(e.a,{href:"https://github.com/dagworks-inc/hamilton",children:"Hamilton"})," and ",(0,i.jsx)(e.a,{href:"https://airflow.apache.org/",children:"Airflow"})," ",(0,i.jsx)(e.a,{href:"https://en.wikipedia.org/wiki/Directed_acyclic_graph",children:"directed acyclic graphs"})," (DAGs) work in tandem. Airflow is responsible for orchestration (think macro) and Hamilton helps author clean and maintainable data transformations (think micro). The reason you can run Hamilton with Airflow, is that Hamilton is just a library with a small dependency footprint, so one can get started with Hamilton in no time! For those that are unfamiliar with Hamilton, we point you to an interactive overview on ",(0,i.jsx)(e.a,{href:"tryhamilton.dev",children:"tryhamilton.dev"}),". Otherwise we will talk about Hamilton at a high level and point to reference documentation for more details.\n",(0,i.jsx)(e.img,{alt:"Apache Airflow Banner",src:a(9591).Z+"",width:"848",height:"245"})]}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsxs)(e.p,{children:["crosspost from ",(0,i.jsx)(e.a,{href:"https://blog.dagworks.io/p/supercharge-your-airflow-dag-with",children:"https://blog.dagworks.io/p/supercharge-your-airflow-dag-with"})]}),"\n"]})]})}function m(t={}){const{wrapper:e}={...(0,o.a)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(c,{...t})}):c(t)}},9591:(t,e,a)=>{a.d(e,{Z:()=>i});const i=a.p+"assets/images/airflow-banner-a4b15716dcd602dfac2713b49041e9f4.png"},1151:(t,e,a)=>{a.d(e,{Z:()=>l,a:()=>r});var i=a(7294);const o={},n=i.createContext(o);function r(t){const e=i.useContext(n);return i.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function l(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:r(t.components),i.createElement(n.Provider,{value:e},t.children)}}}]);