"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3717],{2820:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var n=o(5893),a=o(1151);const i={slug:"feast-hamilton",title:"Featurization: Integrating Hamilton with Feast",authors:"tj",tags:["Hamilton","Feast","feature store"]},r=void 0,s={permalink:"/blog/feast-hamilton",source:"@site/blog/2023-08-02-feast-hamilton/index.md",title:"Featurization: Integrating Hamilton with Feast",description:"Are you using Feast? or perhaps you are having trouble with it? Or perhaps you are considering adopting it? In this post, you will learn the operational benefits of using Feast with Hamilton. Feast will act as your \u201cfeature store\u201d, while Hamilton will be your in-process \u201cfeature processing engine\u201d. We start by providing an overview of Feast, then show how Hamilton fits into the picture. At the end, we give a recipe for where to go from here, depending on where you are in your \u201cfeature journey\u201d.",date:"2023-08-02T00:00:00.000Z",formattedDate:"August 2, 2023",tags:[{label:"Hamilton",permalink:"/blog/tags/hamilton"},{label:"Feast",permalink:"/blog/tags/feast"},{label:"feature store",permalink:"/blog/tags/feature-store"}],readingTime:16.925,hasTruncateMarker:!0,authors:[{name:"Thierry Jean",url:"https://github.com/zilto",imageURL:"https://github.com/zilto.png",key:"tj"}],frontMatter:{slug:"feast-hamilton",title:"Featurization: Integrating Hamilton with Feast",authors:"tj",tags:["Hamilton","Feast","feature store"]},unlisted:!1,prevItem:{title:"Containerized PDF Summarizer with FastAPI and Hamilton",permalink:"/blog/pdf-summarizer"},nextItem:{title:"Simplify Prefect Workflow Creation and Maintenance with Hamilton",permalink:"/blog/prefect-hamilton"}},l={authorsImageUrls:[void 0]},u=[];function h(e){const t={a:"a",blockquote:"blockquote",p:"p",...(0,a.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"Are you using Feast? or perhaps you are having trouble with it? Or perhaps you are considering adopting it? In this post, you will learn the operational benefits of using Feast with Hamilton. Feast will act as your \u201cfeature store\u201d, while Hamilton will be your in-process \u201cfeature processing engine\u201d. We start by providing an overview of Feast, then show how Hamilton fits into the picture. At the end, we give a recipe for where to go from here, depending on where you are in your \u201cfeature journey\u201d."}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:["crosspost from ",(0,n.jsx)(t.a,{href:"https://blog.dagworks.io/p/featurization-integrating-hamilton",children:"https://blog.dagworks.io/p/featurization-integrating-hamilton"})]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},1151:(e,t,o)=>{o.d(t,{Z:()=>s,a:()=>r});var n=o(7294);const a={},i=n.createContext(a);function r(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);